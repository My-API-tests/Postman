{
	"info": {
		"_postman_id": "ba58f48c-fc1b-410f-b88c-f7b00e92c76f",
		"name": "Basic positive tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26481818"
	},
	"item": [
		{
			"name": "Validate status code",
			"item": [
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/2",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/findByStatus?status=pending",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": pm.globals.get('newPetId'),\r",
									"    \r",
									"    \"category\": {\r",
									"        \"id\": 2,\r",
									"        \"name\": \"string\"\r",
									"    },\r",
									"\r",
									"    \"name\": \"{{$randomFirstName}}\",\r",
									"    \"photoURLs\": [\r",
									"        \"string\"\r",
									"    ],\r",
									"\r",
									"    \"tags\": [\r",
									"        {\r",
									"            \"id\": 10,\r",
									"            \"name\": \"string\"\r",
									"        }\r",
									"    ],\r",
									"\r",
									"    \"status\": \"pending\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload an image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.formdata = [\r",
									"\r",
									"    {\r",
									"        key: \"additionalMetadata\",\r",
									"        value: \"My pet image\",\r",
									"        type: \"text\"\r",
									"    },\r",
									"\r",
									"    {\r",
									"        key: \"file\",\r",
									"        src: \"C:/Users/48608/Postman/files/pet.png\",\r",
									"        type: \"file\"\r",
									"    }\r",
									"]"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{Base_URL}}/3/uploadImage",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"3",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": 0,\r",
									"  \"category\": {\r",
									"    \"id\": 0,\r",
									"    \"name\": \"string\"\r",
									"  },\r",
									"  \"name\": \"doggie\",\r",
									"  \"photoUrls\": [\r",
									"    \"string\"\r",
									"  ],\r",
									"  \"tags\": [\r",
									"    {\r",
									"      \"id\": 0,\r",
									"      \"name\": \"string\"\r",
									"    }\r",
									"  ],\r",
									"  \"status\": \"available\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/{{newPetId}}",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"{{newPetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get created pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/{{newPetId}}",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"{{newPetId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validate payload",
			"item": [
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = pm.iterationData.get(\"findByIdSchema\").toObject();\r",
									"\r",
									"pm.test(\"Validate JSON schema\", ()=> {\r",
									"\r",
									"    pm.expect(pm.response).to.have.jsonSchema(schema.);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/4",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validate JSON schema', () => {\r",
									"\r",
									"    pm.expect(pm.response).to.have.jsonSchema(pm.iterationData.get(\"findByStatusSchema\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/findByStatus?status=pending",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validate JSON schema', () => {\r",
									"\r",
									"    pm.expect(pm.response).to.have.jsonSchema(pm.iterationData.get(\"addNewPetSchema\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": pm.globals.get('newPetId'),\r",
									"    \r",
									"    \"category\": {\r",
									"        \"id\": 2,\r",
									"        \"name\": \"string\"\r",
									"    },\r",
									"\r",
									"    \"name\": \"Brutus_2\",\r",
									"    \"photoURLs\": [\r",
									"        \"string\"\r",
									"    ],\r",
									"\r",
									"    \"tags\": [\r",
									"        {\r",
									"            \"id\": 10,\r",
									"            \"name\": \"string\"\r",
									"        }\r",
									"    ],\r",
									"\r",
									"    \"status\": \"pending\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload an image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validate JSON schema', () => {\r",
									"\r",
									"    pm.expect(pm.response).to.have.jsonSchema(pm.iterationData.get(\"uploadImageSchema\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.formdata = [\r",
									"\r",
									"    {\r",
									"        key: \"additionalMetadata\",\r",
									"        value: \"My pet image\",\r",
									"        type: \"text\"\r",
									"    },\r",
									"\r",
									"    {\r",
									"        key: \"file\",\r",
									"        src: \"C:/Users/48608/Postman/files/pet.png\",\r",
									"        type: \"file\"\r",
									"    }\r",
									"]"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{Base_URL}}/6/uploadImage",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"6",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validate JSON schema', () => {\r",
									"\r",
									"    pm.expect(pm.response).to.have.jsonSchema(pm.iterationData.get(\"updateExistingPetSchema\"));\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": 0,\r",
									"  \"category\": {\r",
									"    \"id\": 0,\r",
									"    \"name\": \"string\"\r",
									"  },\r",
									"  \"name\": \"doggie\",\r",
									"  \"photoUrls\": [\r",
									"    \"string\"\r",
									"  ],\r",
									"  \"tags\": [\r",
									"    {\r",
									"      \"id\": 0,\r",
									"      \"name\": \"string\"\r",
									"    }\r",
									"  ],\r",
									"  \"status\": \"available\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Validate JSON schema', () => {\r",
									"\r",
									"    pm.expect(pm.response).to.have.jsonSchema(pm.iterationData.get(\"deletePetSchema\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/10",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"10"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validate headers",
			"item": [
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const headers = pm.iterationData.get('headers');\r",
									"\r",
									"for(let i = 0; i < headers.length; i++) {\r",
									"\r",
									"    pm.test(headers[i] + ' header is present', () => {\r",
									"\r",
									"        pm.response.to.have.header(headers[i]);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/1",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const headers = pm.iterationData.get('headers');\r",
									"\r",
									"for(let i = 0; i < headers.length; i++) {\r",
									"\r",
									"    pm.test(headers[i] + ' header is present', () => {\r",
									"\r",
									"        pm.response.to.have.header(headers[i]);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/findByStatus?status=pending",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const headers = pm.iterationData.get('headers');\r",
									"\r",
									"for(let i = 0; i < headers.length; i++) {\r",
									"\r",
									"    pm.test(headers[i] + ' header is present', () => {\r",
									"\r",
									"        pm.response.to.have.header(headers[i]);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": pm.globals.get('newPetId'),\r",
									"    \r",
									"    \"category\": {\r",
									"        \"id\": 2,\r",
									"        \"name\": \"string\"\r",
									"    },\r",
									"\r",
									"    \"name\": \"{{$randomFirstName}}\",\r",
									"    \"photoURLs\": [\r",
									"        \"string\"\r",
									"    ],\r",
									"\r",
									"    \"tags\": [\r",
									"        {\r",
									"            \"id\": 10,\r",
									"            \"name\": \"string\"\r",
									"        }\r",
									"    ],\r",
									"\r",
									"    \"status\": \"pending\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload an image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const headers = pm.iterationData.get('headers');\r",
									"\r",
									"for(let i = 0; i < headers.length; i++) {\r",
									"\r",
									"    pm.test(headers[i] + ' header is present', () => {\r",
									"\r",
									"        pm.response.to.have.header(headers[i]);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.formdata = [\r",
									"\r",
									"    {\r",
									"        key: \"additionalMetadata\",\r",
									"        value: \"My pet image\",\r",
									"        type: \"text\"\r",
									"    },\r",
									"\r",
									"    {\r",
									"        key: \"file\",\r",
									"        src: \"C:/Users/48608/Postman/files/pet.png\",\r",
									"        type: \"file\"\r",
									"    }\r",
									"]"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{Base_URL}}/5/uploadImage",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"5",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const headers = pm.iterationData.get('headers');\r",
									"\r",
									"for(let i = 0 ; i < headers.length; i++) {\r",
									"\r",
									"    pm.test(headers[i] + ' header is present', () => {\r",
									"\r",
									"        pm.response.to.have.header(headers[i]);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": 0,\r",
									"  \"category\": {\r",
									"    \"id\": 0,\r",
									"    \"name\": \"string\"\r",
									"  },\r",
									"  \"name\": \"doggie\",\r",
									"  \"photoUrls\": [\r",
									"    \"string\"\r",
									"  ],\r",
									"  \"tags\": [\r",
									"    {\r",
									"      \"id\": 0,\r",
									"      \"name\": \"string\"\r",
									"    }\r",
									"  ],\r",
									"  \"status\": \"available\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const headers = pm.iterationData.get('headers');\r",
									"\r",
									"for(let i = 0; i < headers.length; i++) {\r",
									"\r",
									"    pm.test(headers[i] + ' header is present', () => {\r",
									"\r",
									"        pm.response.to.have.header(headers[i]);\r",
									"    })\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/{{newPetId}}",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"{{newPetId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Performance sanity",
			"item": [
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/1",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/findByStatus?status=pending",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": pm.globals.get('newPetId'),\r",
									"    \r",
									"    \"category\": {\r",
									"        \"id\": 2,\r",
									"        \"name\": \"string\"\r",
									"    },\r",
									"\r",
									"    \"name\": \"{{$randomFirstName}}\",\r",
									"    \"photoURLs\": [\r",
									"        \"string\"\r",
									"    ],\r",
									"\r",
									"    \"tags\": [\r",
									"        {\r",
									"            \"id\": 10,\r",
									"            \"name\": \"string\"\r",
									"        }\r",
									"    ],\r",
									"\r",
									"    \"status\": \"pending\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload an image",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.formdata = [\r",
									"\r",
									"    {\r",
									"        key: \"additionalMetadata\",\r",
									"        value: \"My pet image\",\r",
									"        type: \"text\"\r",
									"    },\r",
									"\r",
									"    {\r",
									"        key: \"file\",\r",
									"        src: \"C:/Users/48608/Postman/files/pet.png\",\r",
									"        type: \"file\"\r",
									"    }\r",
									"]"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{Base_URL}}/5/uploadImage",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"5",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.body.raw = JSON.stringify({\r",
									"\r",
									"    \"id\": 0,\r",
									"  \"category\": {\r",
									"    \"id\": 0,\r",
									"    \"name\": \"string\"\r",
									"  },\r",
									"  \"name\": \"doggie\",\r",
									"  \"photoUrls\": [\r",
									"    \"string\"\r",
									"  ],\r",
									"  \"tags\": [\r",
									"    {\r",
									"      \"id\": 0,\r",
									"      \"name\": \"string\"\r",
									"    }\r",
									"  ],\r",
									"  \"status\": \"available\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base_URL}}",
							"host": [
								"{{Base_URL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Base_URL}}/{{newPetId}}",
							"host": [
								"{{Base_URL}}"
							],
							"path": [
								"{{newPetId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}